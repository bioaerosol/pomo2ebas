#!/usr/bin/env python3

"""
The main section reads pollen predictions from xml and converts them to EbasNasaAmes file format.      
"""
import sys
import argparse

from pomo2ebas import Stations, BAA500, Nas, Defaults
from pomo2ebas import get_station_pollen_list_object,get_station_pollen_list,set_prediction_pollen_vlues

parser = argparse.ArgumentParser(description="""Reads a POMO XML from STDIN and transform the contained data to EBAS BAS Nasa Ames file format which is written to STDOUT.""")

parser.add_argument("--defaultsConfig", help="Path to defaults configuration file; defaults to /etc/pomo2ebas/defaults.yaml", action="store", required=False, default="/etc/pomo2ebas/defaults.yaml")
parser.add_argument("--stationsConfig", help="Path to stations configuration file; defaults to /etc/pomo2ebas/stations.yaml", action="store", required=False, default="/etc/pomo2ebas/stations.yaml")

#parser.add_argument("--defaultsConfig", help="Path to defaults configuration file; defaults to /etc/pomo2ebas/defaults.yaml", action="store", required=False, default=r"C:\Users\Tofahito\Desktop\ZAUM\EBAS\python\project\EBAS\etc\pomo2ebas\defaults.yaml")
#parser.add_argument("--stationsConfig", help="Path to stations configuration file; defaults to /etc/pomo2ebas/stations.yaml", action="store", required=False, default=r"C:\Users\Tofahito\Desktop\ZAUM\EBAS\python\project\EBAS\etc\pomo2ebas\stations.yaml")

args = parser.parse_args()

defaults = Defaults(config_file=args.defaultsConfig)
stations = Stations(config_file=args.stationsConfig)

# create objects
baa500 = BAA500()
nas = Nas(timezone=defaults.get_default("Config", "timezone"), datalevel=defaults.get_default("Config", "datalevel"), project=defaults.get_default("Config", "projects"))

# load station from yaml
station = stations.get_station_by_name("pomo")

# load station pollen list from yaml
pollen_list = station["pollens"]

# simple list of station pollens from yaml
pollen_simple_list = get_station_pollen_list(pollen_list)

# read station predictions from io_weapper (prompt or input)
io_wrapper = sys.stdin
pollen_predicted_list = baa500.get_predicted_pollen_list(io_wrapper, pollen_simple_list)

# convert pollen list into a list of pollen objects of type Pollen
pollen_object_list = get_station_pollen_list_object(pollen_list)

# Set file global metadata for the EbasNasaAmes file object
nas.set_fileglobal_metadata(station, pollen_predicted_list)

# set prediction start and end date and time
sample_times = [(pollen_predicted_list["start"], pollen_predicted_list["end"])]

# Set the time axes and related metadata for the EbasNasaAmes file object.
nas.set_time_axes(station, sample_times)

# set values of predicted pollen
pollen_object_list = set_prediction_pollen_vlues(pollen_object_list, pollen_predicted_list["pollen"])

# set metadata and data for all variables for the EbasNasaAmes file object.
nas.set_variables(station, pollen_object_list)

# create EbasNasaAmes file object.
nas.create_nas_file()
